// <auto-generated />
using System;
using CoEm.HR.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoEm.HR.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoEm.HR.Models.Aplicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DemandanteId")
                        .HasColumnType("int")
                        .HasColumnName("demandante_id");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("estado");

                    b.Property<DateOnly>("FechaAplicacion")
                        .HasColumnType("date")
                        .HasColumnName("fecha_aplicacion");

                    b.Property<int>("VacanteId")
                        .HasColumnType("int")
                        .HasColumnName("vacante_id");

                    b.HasKey("Id");

                    b.HasIndex("DemandanteId");

                    b.HasIndex("VacanteId");

                    b.ToTable("aplicacion", (string)null);
                });

            modelBuilder.Entity("CoEm.HR.Models.Demandante", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("ExperienciaLaboral")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("experiencia_laboral");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("NivelEducacion")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("nivel_educacion");

                    b.HasKey("Id");

                    b.ToTable("demandante", (string)null);
                });

            modelBuilder.Entity("CoEm.HR.Models.Empleador", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Industria")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("industria");

                    b.Property<int>("NumeroEmpleados")
                        .HasColumnType("int")
                        .HasColumnName("numero_empleados");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ubicacion");

                    b.HasKey("Id");

                    b.ToTable("empleador", (string)null);
                });

            modelBuilder.Entity("CoEm.HR.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("direccion");

                    b.Property<bool>("EsEmpleador")
                        .HasColumnType("bit")
                        .HasColumnName("es_empleador");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.ToTable("perfil", (string)null);
                });

            modelBuilder.Entity("CoEm.HR.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Clave")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varbinary(64)")
                        .HasColumnName("clave");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("CoEm.HR.Models.Vacante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<int>("EmpleadorId")
                        .HasColumnType("int")
                        .HasColumnName("empleador_id");

                    b.Property<DateOnly>("FechaPublicacion")
                        .HasColumnType("date")
                        .HasColumnName("fecha_publicacion");

                    b.Property<decimal>("Salario")
                        .HasPrecision(9)
                        .HasColumnType("decimal(9,0)")
                        .HasColumnName("salario");

                    b.Property<string>("TipoContrato")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("tipo_contrato");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("titulo");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadorId");

                    b.ToTable("vacante", (string)null);
                });

            modelBuilder.Entity("CoEm.HR.Models.Aplicacion", b =>
                {
                    b.HasOne("CoEm.HR.Models.Demandante", "Demandante")
                        .WithMany("Aplicaciones")
                        .HasForeignKey("DemandanteId")
                        .IsRequired();

                    b.HasOne("CoEm.HR.Models.Vacante", "Vacante")
                        .WithMany("Aplicaciones")
                        .HasForeignKey("VacanteId")
                        .IsRequired();

                    b.Navigation("Demandante");

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("CoEm.HR.Models.Demandante", b =>
                {
                    b.HasOne("CoEm.HR.Models.Perfil", "Perfil")
                        .WithOne("Demandante")
                        .HasForeignKey("CoEm.HR.Models.Demandante", "Id")
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("CoEm.HR.Models.Empleador", b =>
                {
                    b.HasOne("CoEm.HR.Models.Perfil", "Perfil")
                        .WithOne("Empleador")
                        .HasForeignKey("CoEm.HR.Models.Empleador", "Id")
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("CoEm.HR.Models.Perfil", b =>
                {
                    b.HasOne("CoEm.HR.Models.Usuario", "Usuario")
                        .WithOne("Perfil")
                        .HasForeignKey("CoEm.HR.Models.Perfil", "Id")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CoEm.HR.Models.Vacante", b =>
                {
                    b.HasOne("CoEm.HR.Models.Empleador", "Empleador")
                        .WithMany("Vacantes")
                        .HasForeignKey("EmpleadorId")
                        .IsRequired();

                    b.Navigation("Empleador");
                });

            modelBuilder.Entity("CoEm.HR.Models.Demandante", b =>
                {
                    b.Navigation("Aplicaciones");
                });

            modelBuilder.Entity("CoEm.HR.Models.Empleador", b =>
                {
                    b.Navigation("Vacantes");
                });

            modelBuilder.Entity("CoEm.HR.Models.Perfil", b =>
                {
                    b.Navigation("Demandante");

                    b.Navigation("Empleador");
                });

            modelBuilder.Entity("CoEm.HR.Models.Usuario", b =>
                {
                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("CoEm.HR.Models.Vacante", b =>
                {
                    b.Navigation("Aplicaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
